<?php

namespace App\Http\Controllers;

use App\Http\Requests;
use App\Http\Controllers\Controller;
use App\Admin;
use Validator;
use DB;
use Excel;
use Input;

use Request;

class AdminsController extends Controller
{
    public function index()
    {
           $admins = Admin::all();
            return view('admins.index',compact('admins')); 
    }

    public function show($id)
    {
        $admin = Admin::findOrFail($id);
        return view('admins.show',compact('admin'));
    }

     public function store()
    {

        $rules = array(
        'admin_name' => array('required','regex:/^[\pL\s]+$/u'),
        'user_name' => array('required'),
        'email' => array('email','unique:admins,Mail'),
        'user_name' => array('required','unique:admins,User_Name'),
        'password' => array('required','unique:admins,Password'),
     );

        $messsages = array(
            'required' => 'برجاء ادخال البيانات',
            'email.unique' => 'الرجاء ادخال البريد الاليكتروني',
            'unique' => 'هذه القيمة موجوده بالفعل', 
            'email'=>'ادخل البريد الاليكتروني بطريقة صحيحة',        
            'admin_name.regex'=> 'الرجاء أدخل حروف فقط'
        );

    $validator = Validator::make(Input::all(), $rules,$messsages);
        
        if ($validator->fails()) {
                // dd($validator);
                return redirect('admins/create')
                                ->withErrors($validator)->withInput();
            }
        
        else {   
            $admin = new Admin;
            $admin->Admin_Name = Request::get('admin_name');
            $admin->User_name = Request::get('user_name');
            $admin->Password = Request::get('password');
            $admin->Mail = Request::get('mail');

            $admin->save();
            return redirect('/admins');
            }
                      
    }

    public function create()
    {        
        return view('admins.create');
    }

    public function edit($id)
    { 
        $admin = Admin::find($id);
        return view('admins.edit',compact('admin'));
    }

    public function update($id)
    {
        $admin = Admin::find($id);
        $rules = array(
            'admin_name' => array('required','regex:/^[\pL\s]+$/u'),
            'user_name' => array('required'),
            'email'     => array('email'),
            'user_name' => array('required'),
            'password'  => array('required'),
        );

        $messsages = array(
            'required' => 'برجاء ادخال البيانات',      
            'email'=>'ادخل البريد الاليكتروني بطريقة صحيحة',        
            'admin_name.regex'=> 'الرجاء أدخل حروف فقط'
        );

        $validator = Validator::make(Input::all(), $rules,$messsages); 
        // $validator = Validator::make(Input::all(), $rules);  
        // dd($validator->fails());      
        if ($validator->fails()) {
                // dd($validator);
                // dd($admin);
                return redirect('admins/'.$admin->Admin_Id.'/edit')
                                ->withErrors($validator)->withInput();
            } 

        else {   
                // dd('true');
                $admin->Admin_Name = Request::get('admin_name');
                $admin->User_Name = Request::get('user_name');
                $admin->Password = Request::get('password');
                $admin->Mail = Request::get('mail');
                $admin->save();
                return redirect('/admins');
            }
    }

    public function destroy($id)
    {
        $admin = Admin::find($id);
        $admin->delete();
        return redirect('/admins');
    }
    

}
